.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_fitting_plot_line_2d.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_fitting_plot_line_2d.py:


2D Line of Best Fit
===================

Fit a line to multiple 2D points.



.. image:: /gallery/fitting/images/sphx_glr_plot_line_2d_001.png
    :alt: plot line 2d
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    (<Figure size 640x480 with 1 Axes>, <matplotlib.axes._subplots.AxesSubplot object at 0x7fdcf66529d0>)





|


.. code-block:: default

    from skspatial.objects import Points, Line
    from skspatial.plotting import plot_2d


    points = Points([
        [0, 0],
        [0, 1],
        [1, 2],
        [3, 3],
        [4, 3],
        [6, 5],
        [5, 6],
        [7, 8],
    ])

    line_fit = Line.best_fit(points)


    plot_2d(
        line_fit.plotter(t_1=-7, t_2=7, c='k'),
        points.plotter(c='k'),
    )


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.079 seconds)


.. _sphx_glr_download_gallery_fitting_plot_line_2d.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_line_2d.py <plot_line_2d.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_line_2d.ipynb <plot_line_2d.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
