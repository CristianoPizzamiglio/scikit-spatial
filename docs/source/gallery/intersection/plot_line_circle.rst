.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_intersection_plot_line_circle.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_intersection_plot_line_circle.py:


Circle-Line Intersection
========================



.. image:: /gallery/intersection/images/sphx_glr_plot_line_circle_001.png
    :alt: plot line circle
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    (-5.5, 5.5, -5.5, 5.5)





|


.. code-block:: default

    from skspatial.objects import Circle, Line
    from skspatial.plotting import plot_2d


    circle = Circle([0, 0], 5)
    line = Line([0, 0], [1, 1])

    point_a, point_b = circle.intersect_line(line)


    _, ax = plot_2d(
        circle.plotter(fill=False),
        line.plotter(t_1=-5, t_2=5, c='k'),
        point_a.plotter(c='r', s=100, edgecolor='k', zorder=3),
        point_b.plotter(c='r', s=100, edgecolor='k', zorder=3),
    )

    ax.axis('equal')


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.097 seconds)


.. _sphx_glr_download_gallery_intersection_plot_line_circle.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_line_circle.py <plot_line_circle.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_line_circle.ipynb <plot_line_circle.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
